services:
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
       - ./bloglist-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
       - ./bloglist-backend/mongo_data:/data/db
  server:
    image: blog-backend
    restart: always
    build:
      context: ./bloglist-backend
      dockerfile: Dockerfile
    volumes:
      - ./bloglist-backend:/usr/src/part12/my-app/bloglist-backend
    ports:
      - 3003:3003
    environment: 
      MONGO_URI: mongodb://the_username:the_password@mongo:27017/the_database
      PORT: 3003
      SECRET: salasana
      NODE_ENV: production
    container_name: bloglist-backend
  app:
    image: blog-frontend
    build:
      context: ./bloglist-frontend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./bloglist-frontend:/usr/src/part12/my-app/bloglist-frontend # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 5173:5173
    container_name: blog-frontend
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy-bloglist
    depends_on:
        - app
  