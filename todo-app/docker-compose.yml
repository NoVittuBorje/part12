services:
  server:                    # The name of the service, can be anything
    image: todo-backend # Declares which image to use
    build:            # Declares where to build if image is not found
      context: ./todo-backend
      dockerfile: Dockerfile
    ports:                # Declares the ports to publish
      - 3000:3000
    environment: 
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
    container_name: todo-backend
  app:
    image: todo-front
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/part12/todo-app/todo-frontend # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 5173:5173
    container_name: todo-front
    environment:
      - VITE_BACKEND_URL=http://localhost:8080/api/
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
        - app
        - server
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
  redis:
    image: redis
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data
volumes:  
  mongo_data: